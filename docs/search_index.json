[
["index.html", "Automation of Assessment: Project Overview 1 Abstract", " Automation of Assessment: Project Overview Zachary M. Smith 2020-04-06 1 Abstract The New York State Department of Environmental Conservation’s (NYSDEC’s) Bureau of Water Assessment and Management (BWAM) has made it a top priority to automate waterbody assessments as dictated by NYSDEC’s Consolidated Assessment and Listing Methodology (CALM). For this process to work efficiently, BWAM will need to 1) establish authoritative data repositories and 2) establish a standardized process for applying the assessment process outlined in the CALM. This document details the process for standardizing the assessment logic dictated in the CALM using R statistical software and provides recommendations on the structure and content of data that BWAM should store in their authoritative data repositories. "],
["calm.html", "2 CALM 2.1 Data Modernization", " 2 CALM The NYSDEC maintains a CALM that describes the processes and procedures used to assess the quality of New York’s surface waters and determine the attainment status in each waterbody consistent with applicable water quality standards and guidance values. The following dichotomous key and Figure 2.1 provide two ways of simplifying the assessment process outlined in the CALM. The assessments are used by New York state for management purposes and ultimately reported to the United State Environmental Protection Agency (USEPA) in the form of a 303d list. Dichotomous Key 1a.) The following requirements are NOT met: ELAP certified lab used for analytics (Not applicable until we consider external data sources) Project has an approved QAPP (Not applicable until we consider external data sources) &lt; 10 years old (assessment_period(); within_assess_period == FALSE) Requires manual review 1b.) The above requirements are met (assessment_period(); within_assess_period == TRUE) [2] 2a.) Does not meet the required minimum number of samples or minimum number of years for assessment. (assessment_min_req(); min_req_met == FALSE) [3] 2b.) Meets the required minimum number of samples and minimum number of years for assessment. (assessment_min_req(); min_req_met == TRUE) [5] 3a.) There is a Water Quality Standard violation Classify as Impaired/Unconfirmed IR3 3b.) There is no Water Quality Standard violation [4] 4a.) &gt;= 75% IQR of Water Quality Standard Classify as Stressed/Unconfirmed IR3 4b.) &lt; 75% IWR of Water Quality Standard Classify as Fully Supported/Unconfirmed IR3 5a.) There is a Water Quality Standard violation [7] 5b.) There is no Water Quality Standard violation [6] 6a.) &gt;= 75% IQR of Water Quality Standard Classify as Stressed/Confirmed IR1 6b.) &lt; 75% IWR of Water Quality Standard Classify as Fully Supported/Confirmed IR1 7a.) &gt;= 2 violations over &gt;= 2 years [8] 7b.) &lt; 2 violations over &gt;= 2 years Classify as Impaired/Unconfirmed IR3 8a.) A TMDL exists for the parameter Classify as Impaired/Confirmed IR4 8b.) A TMDL does not exist for the parameter [9] 9a.) A Long Term Consent order or another restoration plan exists Classify as Impaired/Confirmed IR4b 9b.) A Long Term Consent order or another restoration plan do not exist [10] 10a.) The parameter is considered a pollutant Classify as Impaired/Confirmed IR4c 10b.) The parameter is not considered a pollutant Classify as Impaired/Confirmed IR5 Figure 2.1: A decision tree to vizualize the assessment process as defined in the NYSDEC CALM. 2.1 Data Modernization BWAM is piloting the Division of Water’s (DOW’s) Data Modernization effort in partnership with the New York State Office of Information Technology Services (ITS) which will create a robust data workflow for all BWAM related data (Figure 2.2). Progress of the Data Modernization and Automation of Assessment projects are not dependent upon one another, but these projects are not mutually exclusive. The process developed for the Automation of Assessment will ultimately be inserted in the data workflow produced by the Data Modernization project (Figure 2.2). Furthermore, the Data Modernization effort will ultimately produce the authoritative data repositories, in the form of Oracle databases, necessary for automating assessments. No definitive deadline has been establish for the completion of the authoritative Oracle databases; however, the Data Modernization development process has forced the Stream Monitoring and Assessment Section (SMAS), the Lake Monitoring and Assessment Section (LMAS), and the Water Assessment and Implementation Section (WAIS) to begin to compile, re-structure, and re-format their data sets into interim-databases in preparation for the creation of these authoritative Oracle databases. These interim-databases will serve as the current authoritative databases with the expectation that there will be changes to the structure and format of the data once the Oracle databases are finalized, but these changes will be relatively minor. Attempting to align these two efforts as much as possible should ultimately be cost effective, because these two efforts have the potential to be mutually beneficial. Figure 2.2: An overview of New York State Department of Environmental Conservation’s (NYSDEC’s) Bureau of Water Assessment and Management (BWAM) data workflow. The portion of the process surrounded by the red dotted box is most relavent to the automation of assessments. Within the red box are two authoratative database (i.e., the authoratative stream and lake databases) for storing observed water quality variables. Relavent observed values are quired out of these authoratitative databases and processed with an R-script applying CALM logic to assess waterbodies. The assessments produced by the R-script are stored within the authoratative Assessment database, which can be subsequently queried for reporting purposes. "],
["water-quality-standards-and-guidance-values.html", "3 Water Quality Standards and Guidance Values 3.1 Waterbody Class Hierarchy", " 3 Water Quality Standards and Guidance Values NYS’s water quality standards (WQSs) and guidance values (GVs) are defined in Title 6 NYCRR, Part 703, and TOGS 1.1.1, respectively. WQSs and GVs are assigned to fresh and saline surface water classes, and ultimately determine if a waterbody is attaining its designated uses (i.e., fishing, secondary contact recreation, primary contact recreation, source water supply, and shellfishing). In general, the relationship between waterbody classes is hierarchical. 3.1 Waterbody Class Hierarchy Fresh and saline surface water classes generally conform to a descending alphabetical hierarchy (Figure 3.1). Class D represents the most upstream class of the fresh surface waters, while class AA-Special represents the most downstream class (Figure 3.1A). Similarly, class SD represents the most upstream class of the saline surface waters, while class SA represents the most downstream class (Figure 3.1B). Class I, within saline surface waters, is downstream of class SC and upstream of class SB; therefore, class I creates a discrepancy in the descending alphabetical hierarchy of saline surface water classes. Figure 3.1: The standard waterbody class hierarchy of fresh (A) and saline surface waters (B) for which New York State’s water quality standards are inherited in descending alphabetical order. The navy-blue boxes represent the waterbody classes and the red arrows indicate the direction that water quality standards are inherited through the class hierarchy. The gray boxes surrounding the depiction of class hierarchy indicate which designated uses are applicable for a given class. WQSs and GVs assigned to upstream classes are inherited by all downstream classes. The most upstream class associated with a WQS or GV will be referred to as the “root” class for a given standard. For example, fishing use WQSs and GVs have a root of D and SD classes, and therefore will be applicable to all downstream fresh surface water classes (i.e., C, B, A, A-Special, AA, AA-Special, and their associated Trout (T) and Trout Spawning (TS) variants) and saline surface water classes (i.e., I, SC, SB, and SA), respectively. D and SD represent the most upstream classes in fresh and saline surface waters, respectively, and therefore influence all other classes. However, D and SD classes do not always represent the root class for a given WQS or GV. The root class for source water supply WQSs and GVs is A, and therefore the hierarchy only extends in sequential order from A to AA-Special. Inheritance through the hierarchy does not necessarily imply that all class have the same WQSs or GVs; in many instances, the WQSs or GVs become increasingly more restrictive moving downstream through the hierarchy. WQSs and GVs will not become less restrictive moving downstream through the hierarchy (Dissolved Solids and Total and Fecal Coliforms represent discrepancies to this rule). Although most WQSs and GVs are inherited according to the logic in Figure 3.1, there are multiple discrepancies. 3.1.1 Discrepancies The following WQS do not follow the logic depicted in Figure 3.1. It is important to specifically document all discrepancies because these instances will require special attention within the standardized assessment automation process. 3.1.1.1 Class I In TOGS 1.1.1 Part 1A-Section 3. Water Classes and Type, WQSs for the saline surface water class I should be defined for types Human Consumption of Fish (H(FC)), Aquatic Chronic (A(C)), Aquatic Acute (A(A)), Wildlife Protection (W), and Aesthetic (E). However, in Table 1 of TOGS 1.1.1 and in Title 6 NYCRR, Part 703.5, class I water’s are frequently and inconsistently excluded from the above mentioned types; this creates a class hierarchy that follows the logic in Figure 3.2 rather than the logic in Figure 3.1. Figure 3.2: In some instances New York State saline surface water standards exclude class I from the hierarchy of class. The following parameters are not applicable to class I waters, which deviates from the logic presented in TOGS 1.1.1 Part 1A-Section 3: Aldrin (309-00-2) Aldrin and Dieldrin (309-00-2; 60-57-1) Arsenic (NA) Hexavalent Chromium (NA) Endosulfan (115-29-7) Endrin (72-20-8) Hexachlorocyclopentadiene (77-47-4) Trichlorobenzenes (87-61-6, 120-82-1, 108-70-3, 12002-48-1) Azinphosmethyl (86-50-0) Demeton (8065-48-3, 298-03-3, 126-75-0) Hydrogen sulfide (7783-06-4) Malathion (121-75-5) Methoxychlor (72-43-5) Mirex (2385-85-5) Toxaphene (8001-35-2; A(C)) The following parameters are applicable to class I waters, which is consistent with the logic presented in TOGS 1.1.1 Part 1A-Section 3: Ammonia and Ammonium (7664-41-7) Benzene (71-43-2) Boron (NA) Cadmium (NA) Chlordane (57-74-9) dibenzofurans (NA) Total Residual Chlorine (NA) Chlorobenzene (108-90-7) Copper (NA) Cyanide (NA) p,p′-DDD (72-54-8) p,p′-DDE (72-55-9) p,p′-DDT (50-29-3) Dieldrin (60-57-1) 2,4-Dimethylphenol (105-67-9) 2,4-Dinitrophenol (51-28-5) Heptachlor (76-44-8) Heptachlor expoxide (1024-57-3) Hexachlorobenzene (118-74-1) Hexachlorobutadiene (87-68-3) alpha-Hexachlorocyclohexane (319-84-6) beta-Hexachlorocyclohexane (319-85-7) delta-Hexachlorocyclohexane (319-86-8) epsilon-Hexachlorocyclohexane (6108-10-7) gamma-Hexachlorocyclohexane (58-89-9) Hexachloroethane (67-72-1) Lead (NA) Mercury (NA) Methylene chloride (75-09-2) Nickel (NA) Octachlorostyrene (29082-74-4) Polychlorinated biphenyls (NA) Toluene (108-88-3) Toxaphene (8001-35-2) Trichloroethene (79-01-6) Zinc (NA) pH total coliforms fecal coliforms Additionally, the class I WQS for dissolved oxygen is “Shall not be less than 4.0 mg/L at any time”, while the acute WQS for classes SD, SC, SB, and SA is “Shall not be less than 3.0 mg/L at any time.” This deviates from the general logic presented in (Figure 3.1B), which places class I in between classes SC and SB in the saline surface water hierarchy. 3.1.1.2 Aquatic (Acute) Aquatic (Acute) designates a type of WQS. The class hierarchy associated with Aquatic (Acute) WQSs are treated inconsistently by NYSDEC. In many instances, the class hierarchy follows the rules depicted in Figure 3.1, but there are multiple instances where Aquatic (Acute) WQSs are only applicable to fresh and saline surface water classes D and SD, respectively (Figure 3.3). Figure 3.3: Many water quality standards of type Aquatic (Acute) are only applicable for fresh and saline surface waters D and SD, respectively. Therefore, Aquatic (Acute) standards are not always inherited by the classes downstream of D and SD in their respective hierarchies. There is no standardized logic dictating when Aquatic (Acute) water quality standards are or are not inherited by their descendants. Table (X) is a modified version of the table in Title 6 NYCRR, Part 703.5 subset to only include parameters associated with type Aquatic Acute; Aquatic Chronic types were also retained when they corresponded with an Aquatic Acute standard for a given parameter. In fresh surface waters the Aquatic Acute WQSs for un-ionized ammonia as NH3, benzidine, and carbofuran are only applicable to class D waters. While in saline surface waters arsenic, cadmium, hexavalent chromium, and cyanide are only applicable to class SD waters. Endosulfan and total residual chlorine were only applicable to classes D and SD within fresh and saline surface waters, respectively. In all instances described, the Aquatic Acute standards are superseded by more stringent Aquatic Chronic standards for all classes downstream in the hierarchy– except when class I’s are missing (see Class I). There are also instances in Table (X) where the entire class hierarchy is specified for the Aquatic Acute type (e.g., fresh surface water arsenic and saline surface water Copper). This creates an odd discrepancy for assessments. For example, the arsenic fresh surface water Aquatic Acute and Aquatic Chronic standards are applicable to classes C, B, A, A-Special, AA, and AA-Special. Conversely, the arsenic saline surface water Aquatic Acute standard is only applicable to class SD waters, while the Aquatic Chronic standard is applicable to classes SC, SB, and SA. Thus, a class A waterbody would be assessed for both Aquatic Acute and Aquatic Chronic standards, while the saline counterpart class SA would only be assessed by the Aquatic Chronic standard. 3.1.1.3 Trout and Trout Spawning Waters Fresh surface water classes C, B, A, A-Special, AA, and AA-Special have variants designating Trout (T) and Trout Spawning (TS) waterbodies (e.g., C(T) and C(TS)). For the majority of parameters, these variants have the same WQS as the non-T/TS waterbody classes (Figure 3.1). Dissolved oxygen and ammonia as NH3 WQS differ between non-T/TS, T, and TS waterbody class variants (Figure 3.4); non-T/TS variants have the least stringent standards, while TS variants have the most stringent standards. Figure 3.4: New York State’s fresh surface water dissolved oxygen and ammonia as NH3 water quality standards for class C, B, A, A-Special, AA, and AA-Special differ among Trout (T) and Trout Spawning (TS) class variants. 3.1.1.4 Dissolved Solids The WQS for dissolved solids in fresh surface waters is defined as “Shall be kept as low as practicable to maintain the best usage of waters but in no case shall it exceed 500 mg/L” for classes C, B, A, AA, and AA-Special (Figure 3.5). The standard for class A-Special is “Shall not exceed 200 mg/L.” This deviates from the general logic depicted in Figure 3.1 because the A-Special class is more stringent than its downstream classes, AA and AA-Special. Figure 3.5: New York State’s fresh surface water dissolved solids water quality standards are more stringent for class A-Special than the other waterbody classes. This deviates from the general logic that the downstream classes (i.e., AA and AA-Special) will inherit the standards of class A-Special. 3.1.1.5 Total and Fecal Coliforms The WQSs for total and fecal coliforms in fresh surface waters follow the logic dictated in Figure 3.1, except there is no total coliform standard applicable to class AA-Special (Figure 3.6) and there are no fecal coliform standards applicable to class AA or AA-Special (Figure 3.7). Figure 3.6: There is no total coliform standard defined for fresh water surface class AA-Special in New York State. Figure 3.7: There are no fecal coliform standards defined for fresh water surface classes AA or AA-Special in New York State. "],
["staycalm.html", "4 stayCALM 4.1 R Programming Language 4.2 Process Overveiw 4.3 Expected Data Structure 4.4 Data Preprocessing 4.5 Current Status", " 4 stayCALM The R package, stayCALM (Standardized Tool for Applying Your Consolidated Assessment and Listing Methodology), provides a robust framework for automating assessments as outlined in the NYSDEC CALM. The intent is to provide a tool that enforces a strict standardized process, but is flexible enough to quickly and accurately accommodate changes to the CALM. 4.1 R Programming Language The programming language, R, was selected because it provides an excellent environment for developing and executing standardized computations and processes. 4.2 Process Overveiw There are two methods for applying the logic defined in the CALM– both of which could be supported by the functions provided in stayCALM: The CALM process could be strictly followed by dividing the data at each node of the decision tree depicted in Figure 1 until each data point has been appropriately assessed. The various subsets created during this process would be appended together to create the final assessment product. Pros: No unnecessary calculations are made. Cons: The process creates many disperate datasets, which… makes it difficult comprehend how the data is being handled at each step; leaves room for the introduction of errors, such as accidentally dropping a subset of data or applying the wrong process to a subset of data; and future modifications to the CALM may require an extensive re-structuring of flow through the decision tree (Figure 1). All intermittent steps from the CALM process could be applied globally to the data set, and subsequently the assessment classifications can be assigned. Pros: The process does not divide the data into multiple subsets, which… makes it simple to follow the process; reduces the chance of introducting errors; and will require minimal reconfiguration if the CALM process is updated in the future. Cons: Potentially slower than other methodologies because unnecessary calculations are made. The time added by these unnecessary calculations is likely to be neglible for the data set sizes assessed by NYSDEC. Additionally, the potential time lag would likely be on the order of seconds or minutes; this is far faster than a manual effort to perform assessments for a large amount of data, which would likely be on the order of days, weeks, or months. 4.3 Expected Data Structure Data should be stored in a long-format where each row represents a single parameter value collected during a sampling event. stayCALM::stream 4.4 Data Preprocessing Data Preprocessing Assessment Database Water Quality Thresholds tlkParam = a table that includes water quality standards associated with waterbody class and parameter. tlkParam_75p_long = a table that includes 75th percentile thresholds associated with waterbody class and parameter. These tables need to be expanded to include every combination of trout (T) and trout spawning (TS) designations. NEED: build a function to prepare T and TS designations. NEED: to export these tables and add them to the Assessment Database. The following tables from the Assessment database need to be joined tblWIPWL tblkCOUNTY (by = “COUNTY”) tlkDRAIN_BASIN (by = “SUBBASIN_CODE”) tlk305B (by = “TYPE”) tlkTYPE (by = “X305B_CODE”) tlkParam (as prepared above) tlkParam_75p_long (as prepared above) Alter: change the order that these occur in the script. tlkParam tables should be prepared first, and then the other Assessment database tables should be imported, joined, and joined with the tlkParam tables. Chemistry Data correction_param_prep() = parameters used as correction factors (e.g., hardness, pH, and temperature) are extracted from the parameter-name and parameter-value columns and represented as a unique column. This prepares the data frame for the correction factors to be applied to the appropriate parameter values. The correction parameters, when available, will be joined with all parameters collected during the same sampling event, NOT just the parameters that require correction. This global join simplifies the preprocessing steps and reduces the chance of introducing errors. ISSUE: pH is creating duplicates Join the prepared Assessment tables with the prepared Chemistry tables by = c(\"SEG_ID\" = \"SH_PWL_ID\", \"parameter\" = \"CHEMICAL_NAME\") date_standard_cols() = adds various date related columns to the data frame that will simplify the assessment process. datetime date year month preprocess_validation() = ensures that the data validation column only includes the expected character strings and filters out rows that represent “Not Reported”. Review: how does this handle NAs? assessment_id() = uses dplyr group_indicies() to generate a unique assessment ID based on unique instances of the columns supplied to the ellipse argument (...). assessment_id the name of the column added to the data frame representing the unique assessment ID. assessment_period() = allows for the specification of the assessment period by number of years from the current date. For example, the default value is 10-years (n_years_ago = 10), and therefore the sampling period would include all samples from 10-years from the present date to the present date. asssess_period the name of the column added to the data frame, which will specify “within_assessment_period” or “outside_assessment_period”. These designations will dictate how the data is assessed via the CALM. assessment_min_counts() = allows for the specification of the minimum number of samples required per a designated group (e.g., assessment_id) to perform an assessment. n_samples = a column representing the total number of samples per designated group. min_n_samples = a column containing logical values indicating if there are enough samples available to perform an assessment. These designations will dictate how the data is assessed via the CALM. assessment_min_years() = allows for the specification of the minimum number of years required to perform an assessment. This is different from assessment_period(). assessment_period() designates the extent of the time period within_assess_period = a logical column indicating if the samples were collected within the designated sampling period (TRUE) or not (FALSE). assessment_min_req() = wraps around assessment_min_counts() and assessment_min_years() to perform these calculations with a single call and provides a flag indicating if the minimum requirements from both functions were met. min_req_met = a column indicating if the minimum number of samples and minimum number of sampling years are met (min_n_samples == TRUE &amp; min_n_years == TRUE). The values in this column will represent logical values (TRUE or FALSE). Questioning: should assessment period be included in this call and update the min_req_met column? No, these should remain separate 4.5 Current Status To Do Create a general function for assessing both WQS and &gt; 75% IQR of WQS Create a classification function that uses case_when to look at all prepped columns "],
["methods.html", "5 Methods 5.1 stayCALM Package Installation 5.2 Prepare the R Environment 5.3 Preprocess Data 5.4 Assess", " 5 Methods 5.1 stayCALM Package Installation You can install the development version from GitHub with: # install.packages(&quot;devtools&quot;) devtools::install_github(&quot;BWAM/stayCALM&quot;) You must have rtools installed on your machine for the stayCALM to be built upon installation from GitHub. rtools is NOT an R package. On Windows machines, rtools can be installed from the following CRAN repository: https://cran.r-project.org/bin/windows/Rtools/. 5.2 Prepare the R Environment Load the necessary R packages into the global environment, including the stayCALM package. library(tidyverse) library(stayCALM) 5.3 Preprocess Data 5.3.1 Water Quality Standards Data was preprocessed to resemble the expected output from the athorotative databases that will become available as part of the Data Modernization effort Data Modernization. data(nysdec_wqs) fresh - fresh surface waters D &gt; C &gt; B &gt; A &gt; A-Special &gt; AA &gt; AA-Special D &gt; C &gt; C(T) &gt; C(TS) &gt; B &gt; B(T) &gt; B(TS) &gt; A &gt; A(T) &gt; A(TS) &gt; A-Special &gt; A-Special(T) &gt; A-Special(TS) &gt; AA &gt; AA(T) &gt; AA(TS) &gt; AA-Special &gt; AA-Special(T) &gt; AA-Special(TS) saline - saline surface waters SD &gt; I &gt; SC &gt; SB &gt; SA wqs.df &lt;- purrr::map_df(c(&quot;fresh&quot;, &quot;saline&quot;, &quot;saline_i&quot;), function(type.i) { class.vec &lt;- switch(type.i, &quot;fresh&quot; = c(&quot;D&quot;, class_variants(.class_vec = c(&quot;C&quot;, &quot;B&quot;, &quot;A&quot;, &quot;A-Special&quot;, &quot;AA&quot;, &quot;AA-Special&quot;), .variant_vec = c(&quot;&quot;, &quot;(T)&quot;, &quot;(TS)&quot;))), &quot;saline&quot; = c(&quot;SD&quot;, &quot;I&quot;, &quot;SC&quot;, &quot;SB&quot;, &quot;SA&quot;)) #&quot;saline_i&quot; = &quot;I&quot;) wqs_sub.df &lt;- nysdec_wqs[nysdec_wqs$class_type == type.i, ] final.df &lt;- class_inheritance(.data = wqs_sub.df, parameter, .class_col = class, .levels_vec = class.vec) %&gt;% dplyr::mutate(class = as.character(class)) }) 5.3.2 WI/PWL Data was preprocessed to resemble the expected output from the athorotative databases that will become available as part of the Data Modernization effort Data Modernization. data(&quot;wipwl.df&quot;) wqs_wipwl.df &lt;- wipwl.df %&gt;% select(seg_id, class, tmdl_id, mgmtstat) %&gt;% distinct() %&gt;% left_join(wqs.df, by = &quot;class&quot;) 5.3.3 Stream Data Data was preprocessed to resemble the expected output from the athorotative databases that will become available as part of the Data Modernization effort Data Modernization. data(stream_chem.df) chem.df &lt;- stream_chem.df %&gt;% rename_all(tolower) %&gt;% rename(seg_id = sh_pwl_id, parameter = chemical_name) %&gt;% inner_join(wqs_wipwl.df, by = c(&quot;seg_id&quot;, &quot;parameter&quot;)) chem_final.df &lt;- chem.df %&gt;% mutate(result_numeric = if_else(is.na(result_numeric) &amp; !is.na(validation_level), reporting_detection_limit, result_numeric)) %&gt;% filter(!validation_level %in% &quot;Not Reported&quot;, !is.na(result_numeric)) 5.4 Assess Thresholds represented by NA will throw an error. The majority of the NAs in the threshold column now need to be calculated– a task I have not standardized yet. chem_final.df &lt;- chem_final.df %&gt;% filter(!is.na(threshold)) assessed.df &lt;- chem_final.df %&gt;% # Drop this filter after additional prep steps have been added filter(is.na(formula) &amp; statistic %in% &quot;none&quot; &amp; block %in% &quot;single&quot;) %&gt;% date_standard_cols(.date_col = sample_date) %&gt;% assessment_id(seg_id, lab_anl_method_name, cas_rn, parameter) %&gt;% mutate( within_period = assessment_period(.df = ., .date_col = date, .n_years_ago = 10), min_years_samples = all(assessment_min_years(.df = ., .date_col = date, .min_years = 2, assessment_id), assessment_min_counts(.df = ., .min_samples = 8, assessment_id)), attaining_wqs = wqs_attaining(result_numeric, direction, threshold, na.rm = TRUE), attaining_75 = wqs_attaining(result_numeric, direction, threshold, na.rm = TRUE), min_violations_year = TRUE, tmdl = !is.na(tmdl_id), ltco_rest_plan = mgmtstat %in% &quot;Strategy Implementation Scheduled or Underway&quot;, pollutant = TRUE ) test.df &lt;- assessed.df %&gt;% mutate( assessment = case_when( !within_period ~ &quot;Manual Review Required: Manual Review Required: Manual Review Required&quot;, !min_years_samples &amp; attaining_wqs ~ &quot;IR3: Impaired: Unconfirmed&quot;, !min_years_samples &amp; !attaining_wqs &amp; attaining_75 ~ &quot;IR3: Fully Supported: Unconfirmed&quot;, !min_years_samples &amp; !attaining_wqs &amp; !attaining_75 ~ &quot;IR3: Stressed: Unconfirmed&quot;, min_years_samples &amp; attaining_wqs &amp; attaining_75 ~ &quot;IR1: Fully Supported: Confirmed&quot;, min_years_samples &amp; attaining_wqs &amp; !attaining_75 ~ &quot;IR1: Stressed: Confirmed&quot;, min_years_samples &amp; !attaining_wqs &amp; !min_violations_year ~ &quot;IR3: Impaired: Unconfirmed&quot;, min_years_samples &amp; !attaining_wqs &amp; min_violations_year &amp; tmdl ~ &quot;IR4a: Impaired: Confirmed&quot;, min_years_samples &amp; !attaining_wqs &amp; min_violations_year &amp; !tmdl &amp; ltco_rest_plan ~ &quot;IR4b: Impaired: Unconfirmed&quot;, min_years_samples &amp; !attaining_wqs &amp; min_violations_year &amp; !tmdl &amp; !ltco_rest_plan &amp; pollutant ~ &quot;IR4c: Impaired: Confirmed&quot;, min_years_samples &amp; !attaining_wqs &amp; min_violations_year &amp; !tmdl &amp; !ltco_rest_plan &amp; !pollutant ~ &quot;IR5: Impaired: Confirmed&quot;, TRUE ~ &quot;ERROR&quot; ) ) # table(test.df$assessment) "],
["results.html", "6 Results", " 6 Results "],
["discussion.html", "7 Discussion", " 7 Discussion "]
]
